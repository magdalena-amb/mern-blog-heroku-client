{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/HtmlBox/HtmlBox.js","utils/cutText.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/pages/NewPost/NewPost.js","components/features/SinglePost/SinglePost.js","components/pages/SinglePost/SinglePostPage.js","components/features/RandomPost/RandomPost.js","components/pages/RandomPost/RandomPostPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","Component","MainLayout","PageTitle","API_URL","BASE_URL","getRequest","posts","request","getSinglePost","singlePost","getPages","Math","ceil","amount","postsPerPage","createActionName","name","LOAD_POSTS","START_REQUEST","END_REQUEST","ERROR_REQUEST","CLEAR_STATE","GET_POST","LOAD_POSTS_PAGE","getPost","payload","type","startRequest","endRequest","errorRequest","error","loadPostsByPage","getPostRequest","post_id","dispatch","a","axios","get","res","data","message","initialState","pending","success","sent","presentPage","HtmlBox","otherProps","ReactHtmlParser","cutText","text","maxLength","length","shortText","substr","lastIndexOf","textArr","split","finalText","slice","join","Button","variant","SmallTitle","PostSummary","id","content","author","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","pages","onClick","Array","el","page","React","Posts","loadPostsPage","pagination","connect","startAt","limit","loadPostsByPageRequest","HomePage","PostsCounter","count","PostsPage","PostsCounterContainer","ContactPage","NotFoundPage","TextField","value","label","onChange","SectionTitle","PostForm","addPost","e","preventDefault","updatePost","handleChange","target","handleEditor","clearState","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","put","updatePostRequest","NewPost","match","params","SinglePost","appId","href","SinglePostPage","RandomPost","getRandomPost","RandomPostPage","App","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c811e72.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React, { Component} from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends Component {\r\n\r\n    state = {\r\n        links: [\r\n          { path: '/', title: 'Home' },\r\n          { path: '/posts/new', title: 'Add post' },\r\n          { path: '/posts', title: 'Posts' },\r\n          { path: '/contact', title: 'Contact' },\r\n          { path: '/posts/random', title: 'Random ' },\r\n        ],\r\n      }\r\n\r\n    render() {\r\n        const { links } = this.state;\r\n\r\n        return (\r\n          <nav className='navbar'>\r\n            <Logo />\r\n            <MainMenu links={links} />\r\n          </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({children}) => (\r\n    <div>\r\n        <PageContainer>\r\n            <NavBar/>\r\n            {children}\r\n        </PageContainer>\r\n    </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = 'http://localhost:8000/api';\r\n\r\nexport const BASE_URL = 'http://localhost:3000/${location.pathname}';","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n/* SELECTORS */\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCount = ({ posts }) => posts.data.length;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\n\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* ACTIONS */\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const CLEAR_STATE = createActionName('CLEAR_STATE');\r\nexport const GET_POST = createActionName('GET_POST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\n\r\nexport const getPost = payload => ({payload, type: GET_POST});\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const clearState = () => ({ type: CLEAR_STATE });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* THUNKS */\r\n\r\nexport const loadPostsRequest = () => {\r\n    return  async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/posts`);\r\n            dispatch(loadPosts(res.data));\r\n            dispatch(endRequest());\r\n        } catch (err) {\r\n            dispatch(errorRequest(err.message));\r\n        }  \r\n    }\r\n}\r\n\r\nexport const getPostRequest = (post_id) => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/posts/${post_id}`);\r\n            dispatch(getPost(res.data));\r\n            dispatch(endRequest());\r\n        } catch (err) {\r\n            dispatch(errorRequest(err.message));\r\n        }  \r\n    }\r\n}\r\n\r\nexport const getRandomPostRequest = () => {\r\n    return async dispatch => {\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/posts/random`);\r\n\r\n            dispatch(getPost(res.data));\r\n            dispatch(endRequest());\r\n\r\n        } catch (err) {\r\n            dispatch(errorRequest(err.message));\r\n        }  \r\n    }\r\n}\r\n\r\nexport const updatePostRequest = (post_id, post) => {\r\n\r\n    return async dispatch => {\r\n        \r\n        dispatch(startRequest());\r\n        try {\r\n\r\n            let res = await axios.put(`${API_URL}/posts/edit/${post_id}`, post);\r\n            dispatch(endRequest());\r\n\r\n        } catch (err) {\r\n            dispatch(errorRequest(err.message));\r\n        }  \r\n    }\r\n}\r\n\r\nexport const addPostRequest = (post) => { \r\n\r\n    return async dispatch => {\r\n\r\n      dispatch(startRequest());\r\n      try {\r\n  \r\n        let res = await axios.post(`${API_URL}/posts`, post);\r\n        dispatch(endRequest());\r\n  \r\n      } catch(err) {\r\n        dispatch(errorRequest(err.message));\r\n      }\r\n    };\r\n  };\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n\r\n    return async dispatch => {\r\n  \r\n      dispatch(startRequest());\r\n      try {\r\n\r\n        const startAt = (page - 1) * postsPerPage;\r\n        const limit = postsPerPage;\r\n  \r\n        let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n  \r\n        const payload = {\r\n          posts: res.data.posts,\r\n          amount: res.data.amount,\r\n          postsPerPage,\r\n          presentPage: page,\r\n        };\r\n  \r\n        dispatch(loadPostsByPage(payload));\r\n        dispatch(endRequest());\r\n\r\n      } catch(e) {\r\n        dispatch(errorRequest(e.message));\r\n      }\r\n  \r\n    };\r\n};\r\n\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n    data: [],\r\n    request: {\r\n        pending: false,\r\n        error: null,\r\n        success: null,\r\n    },\r\n    singlePost : {},\r\n    sent: false,\r\n    amount: 0,\r\n    postsPerPage: 5,\r\n    presentPage: 1,\r\n}\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n        return { ...statePart, data: action.payload };\r\n    case START_REQUEST:\r\n        return { ...statePart, request: { pending: true, error: null, success: null } };\r\n    case END_REQUEST:\r\n        return { ...statePart, request: { pending: false, error: null, success: true } };\r\n    case ERROR_REQUEST:\r\n        return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n    case GET_POST: \r\n        return { ...statePart, singlePost: action.payload };\r\n    case LOAD_POSTS_PAGE:\r\n        return {\r\n            ...statePart,\r\n            postsPerPage: action.payload.postsPerPage,\r\n            presentPage: action.payload.presentPage,\r\n            amount: action.payload.amount,\r\n            data: [...action.payload.posts],\r\n            };\r\n\r\n    case CLEAR_STATE:\r\n        return { ...statePart,\r\n             data: [],\r\n            request: {\r\n                pending: false,\r\n                error: null,\r\n                success: null,\r\n            },\r\n            sent: false,\r\n            singlePost : {} };\r\n    default:\r\n        return statePart;\r\n  }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","const cutText = (text, maxLength = 100 ) => {\r\n    \r\n    if (text.length < 1) {\r\n        return `Error.`;\r\n    }\r\n\r\n    if (text.length > maxLength) {\r\n        let shortText = text.substr(0, maxLength);\r\n        if (shortText.lastIndexOf !== ' ') {\r\n            let textArr = shortText.split(' ');\r\n            let finalText = textArr.slice(0, textArr.length -1 ).join(' ') + '...';\r\n            return finalText;\r\n        }  \r\n    } else {\r\n        return text;\r\n    } \r\n}\r\n\r\nexport default cutText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport './PostSummary.scss';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from '../../../utils/cutText';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n  <article className='post-summary'>\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <HtmlBox>{cutText( content, 120 )}</HtmlBox>\r\n    <p>Author: {author} </p>\r\n    <Link to={`/posts/${id}`} >\r\n      <Button variant='primary'>Read more</Button>\r\n    </Link>\r\n    <Link to={`/posts/edit/${id}`} >\r\n      <Button variant='danger'>Update post</Button>\r\n    </Link> \r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  state = {\r\n    presentPage: this.props.initialPage\r\n  }\r\n  \r\n  changePage = (newPage)=> {\r\n\r\n    const { onPageChange } = this.props;\r\n \r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { pages } = this.props; \r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n\r\n        <div className=\"pagination\">\r\n\r\n          <ul className=\"pagination__list\">\r\n\r\n          { presentPage > 1  && (\r\n                <span onClick={()=>changePage( presentPage - 1)} className=\"pagination__list__item\"><FaChevronLeft/></span>  \r\n              )}\r\n\r\n              {[...Array(pages)].map((el, page) =>\r\n              <li\r\n                  key={++page}\r\n                  onClick={ ()=>changePage(page) }\r\n                  className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n                  {page}\r\n              </li>\r\n              )}\r\n\r\n              { presentPage < pages  && (\r\n                <span onClick={()=>changePage( presentPage + 1)} className=\"pagination__list__item\"><FaChevronRight/></span>  \r\n              )}\r\n\r\n          </ul>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends Component  {\r\n\r\n  // state = {\r\n  //   pagination: true,\r\n  //   postsPerPage: 5\r\n  // }\r\n\r\n  loadPostsPage = (page) => {\r\n    const { loadPostsByPage,  postsPerPage } = this.props;\r\n    //let { postsPerPage } = this.state; \r\n\r\n    loadPostsByPage(page, postsPerPage );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage,   postsPerPage} = this.props; \r\n    //const { postsPerPage } = this.state;\r\n    loadPostsByPage(initialPage, postsPerPage);  \r\n    \r\n  }   \r\n\r\n  render() {\r\n        const { posts, request, pages, initialPage, pagination } = this.props;\r\n        //const { pagination } = this.state;\r\n        const { loadPostsPage} = this;\r\n\r\n    return (\r\n      <div>\r\n        { (request.pending === false && request.success && posts.length === 0) && <Alert variant = 'info'>No posts yet.</Alert>} \r\n        { (request.pending || request.success === null) && < Spinner />}\r\n        { (request.success && posts.length > 0) && \r\n        <div> \r\n          <PostsList posts={ posts } />\r\n          {pagination && (\r\n              <Pagination pages={pages} onPageChange={ loadPostsPage }\r\n              initialPage={ initialPage }\r\n               />\r\n          )} \r\n        </div>}\r\n        { (request.pending === false && request.error !== null) && <Alert variant = 'error'>{ request.error }</Alert>} \r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nPosts.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        author: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    loadPostsByPage: PropTypes.func.isRequired,\r\n    request: PropTypes.object.isRequired,\r\n    pages: PropTypes.number.isRequired,\r\n    initialPage: PropTypes.number.isRequired,\r\n    pagination: PropTypes.bool.isRequired,\r\n    postsPerPage: PropTypes.number.isRequired\r\n  };\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { getPosts, loadPostsByPageRequest, getRequest, getPages } from '../../../redux/postsRedux';\r\nimport Posts from  './Posts';\r\n\r\n\r\n\r\nconst PostsContainer = ({ pagination=true, postsPerPage=5, children, ...otherProps }) => (\r\n    \r\n        <Posts {...otherProps} pagination={pagination} postsPerPage={postsPerPage} >\r\n            {/* {children} */}\r\n        </Posts>\r\n    )\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: getPosts(state),\r\n    request: getRequest(state),\r\n    pages: getPages(state),\r\n    initialPage: state.posts.presentPage\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(PostsContainer);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <PageTitle>Blog</PageTitle>\r\n        <Posts postsPerPage={3} pagination={false} />\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\n\r\nclass PostsCounter extends Component {\r\n  \r\n  render() {\r\n    let { count } = this.props;\r\n    return (\r\n      <div>Number of posts: { count } </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { connect } from 'react-redux';\r\nimport { getPostsCount } from '../../../redux/postsRedux';\r\nimport PostsCounter from '../PostsCounter/PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n    count: getPostsCount(state),\r\n});\r\n\r\n\r\nexport default connect( mapStateToProps )(PostsCounter);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounterContainer from '../../features/PostsCounter/PostsCounterContainer';\r\nimport PostsContainer from '../../features/Posts/PostsContainer';\r\n\r\n\r\nconst PostsPage = () => (\r\n    <div>\r\n        <PageTitle>Posts list</PageTitle>\r\n        <PostsCounterContainer />\r\n        <PostsContainer pagination={true} postsPerPage={5} />\r\n    </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n    <div>\r\n        <PageTitle> Contact </PageTitle>\r\n        <p> Your Favourite Blooger Ltd. </p>\r\n        <p> 9432 Division Street  \r\n            Stone Mountain, GA 30083\r\n        </p>\r\n        <p> Mobile Number: 207-914-3411  </p>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <div>\r\n        <h1>Sorry! 404 Page not found</h1>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, clearState, getSinglePost, getPostRequest, updatePostRequest } from '../../../redux/postsRedux';\r\n\r\n\r\n// medium editor\r\nimport './PostForm.scss'\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css'; \r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n    state = {\r\n        post: {\r\n          title: '' ,\r\n          author: '',\r\n          content:  '',\r\n        },\r\n        sent: false,\r\n    }\r\n   \r\n  \r\n  async componentDidMount(){\r\n\r\n    const { getPost, post_id } = this.props;\r\n    if (post_id) {\r\n      await getPost(post_id);\r\n      let singlePost = this.props.singlePost;\r\n      this.setState({\r\n        ...this.state,\r\n        post: {\r\n          title: singlePost.title,\r\n          author: singlePost.author,\r\n          content: singlePost.content,\r\n        }\r\n      });\r\n\r\n    }   \r\n  }\r\n  componentWillUnmount(){\r\n    const { clearState } = this.props;\r\n    clearState();\r\n  }\r\n\r\n  addPost = (e) => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n    \r\n    e.preventDefault();\r\n    addPost(post);\r\n    this.setState({ post: {title: '', author: '', content: ''}, sent: true });\r\n  }\r\n\r\n   updatePost = (e) => {\r\n     const { updatePost, post_id } = this.props;\r\n     const { post } = this.state;\r\n  \r\n     e.preventDefault();\r\n      updatePost(post_id, post);\r\n     this.setState({ ...this.state, sent: true });   \r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value }});\r\n  }\r\n\r\n  handleEditor = (text) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text }});\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    const { post, sent } = this.state;\r\n    const { handleChange, handleEditor, addPost, updatePost } = this;\r\n    const { request, singlePost } = this.props;\r\n  \r\n    if (singlePost.id ) {\r\n      if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n      if(request.success && sent === true ) return <Alert variant=\"success\">Post has been updated!</Alert>\r\n      if(request.pending) return <Spinner />\r\n      else return  (\r\n        <form onSubmit={updatePost}>\r\n          <TextField\r\n            label=\"Title\"\r\n            value={post.title} \r\n            name=\"title\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Author\"\r\n            value={post.author}\r\n            name=\"author\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <SectionTitle>Edit post content</SectionTitle>\r\n          <Editor\r\n              className=\"content-editor\"\r\n              text={post.content}\r\n              options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n              onChange={handleEditor}\r\n            />\r\n          <Button variant=\"primary\">Update post</Button>\r\n      </form>\r\n      );\r\n    } else  {\r\n      if (request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n      if(request.success && sent === true) return <Alert variant=\"success\">Post has been added!</Alert> \r\n      if(request.pending) return <Spinner />\r\n      else return  (\r\n          <form onSubmit= {addPost}>\r\n            <TextField\r\n              label=\"Title\"\r\n              value={post.title}\r\n              name=\"title\"\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Author\"\r\n              value={post.author}\r\n              name=\"author\"\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <SectionTitle>Edit post content</SectionTitle>\r\n            <Editor\r\n                className=\"content-editor\"\r\n                text={post.content}\r\n                options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n                onChange={this.handleEditor}\r\n              />\r\n            <Button variant=\"primary\">Add post</Button>\r\n          </form>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n  singlePost: getSinglePost(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n    addPost: (post) => dispatch(addPostRequest(post)),\r\n    clearState: () => dispatch( clearState()),\r\n    getPost: (post_id ) => dispatch(getPostRequest(post_id)),\r\n    updatePost: (post_id, post) =>(dispatch(updatePostRequest(post_id, post)))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from 'react';\r\nimport PostForm from '../../features/PostForm/PostForm';\r\n\r\nconst NewPost = ({match}) =>{\r\n    //console.log(match.params.id);\r\n    return(\r\n        < PostForm post_id ={ match.params.id} />\r\n    );   \r\n};\r\n\r\nexport default NewPost;","import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport { FaFacebookF } from 'react-icons/fa';\r\nimport './SinglePost.scss';\r\n\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, getPostRequest } from '../../../redux/postsRedux';\r\nimport { BASE_URL } from '../../../config';\r\n\r\n\r\nclass SinglePost extends Component {\r\n    \r\n    componentDidMount() {\r\n        const { getPost, post_id } = this.props;\r\n        getPost(post_id);\r\n      }   \r\n\r\n  render() {\r\n        const { singlePost, request } = this.props;\r\n        \r\n    return (\r\n      <div className=\"single-post\"> \r\n        { (request.pending || request.success === null) && < Spinner />}\r\n        { request.success  && (\r\n            <div>\r\n                <PageTitle>{ singlePost.title }</PageTitle>\r\n                <p>Author: {singlePost.author} </p>\r\n                <HtmlBox>{ singlePost.content }</HtmlBox>\r\n        \r\n                <FacebookProvider appId=\"1464353420407801\">\r\n                <ShareButton className='btnFacebook' href={BASE_URL}>\r\n                  <FaFacebookF/>\r\n                  Share\r\n                </ShareButton>\r\n                \r\n                  <Comments href={BASE_URL} />\r\n                </FacebookProvider>\r\n                \r\n            </div> \r\n        )}\r\n        { (request.pending === false && request.error !== null) && <Alert variant = 'error'>{ request.error }</Alert>} \r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nSinglePost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    singlePost: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  };\r\n\r\nconst mapStateToProps = state => ({\r\n  singlePost: getSinglePost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch ) => ({\r\n  getPost: (post_id ) => dispatch(getPostRequest(post_id)),\r\n});\r\n\r\n//export default withRouter(props => <SinglePost {...props}/>);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps )((props => <SinglePost {...props}/>)));","import React from 'react';\r\nimport SinglePost from '../../features/SinglePost/SinglePost';\r\n\r\n\r\nconst SinglePostPage = ( {match} ) => {\r\n  \r\n    const { params: { id } } = match;\r\n    return (\r\n      <div>\r\n        < SinglePost post_id = { id } />\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default SinglePostPage;","import React, { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, getRandomPostRequest } from '../../../redux/postsRedux';\r\n\r\n\r\nclass RandomPost extends Component {\r\n\r\n  render() {\r\n        const { singlePost, request } = this.props;\r\n        \r\n    return (\r\n      <div className=\"random-post\"> \r\n        { (request.pending || request.success === null) && < Spinner />}\r\n        { request.success  && (\r\n            <div>\r\n                <PageTitle>{ singlePost.title }</PageTitle>\r\n                <HtmlBox>{ singlePost.content }</HtmlBox>\r\n                <p>Author: {singlePost.author} </p>\r\n            </div> \r\n        )}\r\n        { (request.pending === false && request.error !== null) && <Alert variant = 'error'>{ request.error }</Alert>} \r\n       \r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nRandomPost.propTypes = {\r\n    singlePost: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  };\r\n \r\n\r\nconst mapStateToProps = state => ({\r\n  singlePost: getSinglePost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch ) => ({\r\n  getRandomPost: () => dispatch(getRandomPostRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(RandomPost);","import React from 'react';\r\nimport RandomPost from '../../features/RandomPost/RandomPost';\r\n\r\n\r\nconst RandomPostPage = () => {\r\n  \r\n    return (\r\n      <div>\r\n        < RandomPost />\r\n      </div>\r\n      \r\n    );\r\n};\r\n\r\nexport default RandomPostPage;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\nimport Home from './components/pages/Home/HomePage';\r\nimport Posts from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\nimport NewPost from './components/pages/NewPost/NewPost';\r\nimport SinglePostPage from './components/pages/SinglePost/SinglePostPage';\r\nimport RandomPostPage from './components/pages/RandomPost/RandomPostPage';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/posts\" component={Posts} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n          <Route exact path='/posts/new' component={NewPost} />\r\n          <Route exact path='/posts/edit/:id' component={NewPost} />\r\n          <Route exact path='/posts/:id' component={SinglePostPage} />\r\n          <Route exact path='/posts/random' component={RandomPostPage} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n//import reducers\r\nimport posts from './postsRedux';\r\n\r\n\r\n//combine reducers\r\nconst rootReducer = combineReducers({\r\n    posts,\r\n  });\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    compose (applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst Root = () => (\r\n    <Provider store= {store}>\r\n        <Router>\r\n            <App/>\r\n        </Router>\r\n    </Provider>\r\n    \r\n);\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}